<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd  
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task.xsd
        http://www.springframework.org/schema/security
      	http://www.springframework.org/schema/security/spring-security.xsd
      	http://www.springframework.org/schema/aop 
      	http://www.springframework.org/schema/aop/spring-aop.xsd
      	http://www.springframework.org/schema/jee 
      	http://www.springframework.org/schema/jee/spring-jee.xsd">

	<!-- Se agrega la configuracion de los Beans de la seguridad de la aplicacion -->
	<import resource="sacg-security.xml" />

	<bean id="ecmEoficoVDBName"
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName"
			value="java:comp/env/jdbc/ecmSigapVDB" />
	</bean>

	<!-- Declaramos la clase que contiene el AutoScan de los controladores -->
	<context:annotation-config />

	<!-- Configuration Swagger Bean -->
	<bean id="documentationConfig"
		class="springfox.documentation.swagger2.configuration.Swagger2DocumentationConfiguration"></bean>

	<mvc:resources mapping="swagger-ui.html"
		location="classpath:/META-INF/resources/" />

	<mvc:resources mapping="/webjars/**"
		location="classpath:/META-INF/resources/webjars/" />

	<!-- <context:property-placeholder location="classpath:swagger.properties" 
		/> -->

	<mvc:default-servlet-handler />

	<mvc:resources mapping="*.html" location="/" />

	<mvc:annotation-driven />

	<!-- Declaramos el archivo de propiedades de la aplicacion -->
	<context:property-placeholder
		location="classpath:application.properties" />

	<!-- se definen los paquetes que buscara por componentes con anotaciones -->
	<context:component-scan
		base-package="com.ecm.sigap" />

	<!-- <task:annotation-driven /> -->

	<!-- configuacion para la implementacion de transacciones -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory">
	</bean>

	<!-- spring rest interceptors -->
	<mvc:interceptors>
		<mvc:interceptor>

			<mvc:mapping path="/**" />

			<mvc:exclude-mapping path="" />
			<mvc:exclude-mapping path="/" />
			<mvc:exclude-mapping path="/**.html" />
			<mvc:exclude-mapping path="/seguridad/login" />
			<mvc:exclude-mapping path="/seguridad/politicas" />
			<mvc:exclude-mapping path="/seguridad/access" />
			<mvc:exclude-mapping path="/seguridad/permiso" />
			<mvc:exclude-mapping path="/test" />
			<mvc:exclude-mapping path="/recuperarArea" />
			<mvc:exclude-mapping path="/sanityCheck" />
			<mvc:exclude-mapping path="/pruebaSintetica/**" />
			<mvc:exclude-mapping path="/e-ciudadano/**" />
			<!-- Swagger UI -->
			<mvc:exclude-mapping path="/v2/api-docs" />
			<mvc:exclude-mapping path="/**swagger**" />
			<mvc:exclude-mapping path="/swagger-resources/**" />
			<mvc:exclude-mapping path="/webjars/**" />
			<mvc:exclude-mapping path="/ope/**" />

			<bean
				class="com.ecm.sigap.data.controller.filter.ControllerInterceptor" />
		</mvc:interceptor>
		
		<mvc:interceptor>
			<mvc:mapping path="/ope/**" />
			<bean
				class="com.ecm.sigap.ope.filter.InboundOpeInterceptor" />
		</mvc:interceptor>
		
	</mvc:interceptors>

	<!-- setting maximum upload size -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="3000000000" />
	</bean>

	<!-- ???? -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="messages" />
	</bean>

	<!-- Important for @Secured annotations to work. Here we enable all three 
		of them - @Secured, @PreAuthorize and @RolesAllowed. You may choose what 
		you use. Check MainRestController for examples. -->
	<!-- <security:global-method-security secured-annotations="enabled" pre-post-annotations="enabled" 
		jsr250-annotations="enabled" /> -->

	<aop:aspectj-autoproxy />

	<context:component-scan
		base-package="com.ecm.sigap.data.audit">
		<context:include-filter type="aspectj"
			expression="com.ecm.sigap.data.audit.aspectj.AuditAdvice" />
	</context:component-scan>

	<!-- Libreria de ACLs -->
	<bean id="sigapAcls" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg value="classpath:acls.xml"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<!-- Plantillas para export de tablas en excel -->
	<bean id="plantillasExcel" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:plantillasExcel/plantillas.json"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<!-- plantillas de correo -->

	<bean id="correosExternosHTML" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:${mail.ruta.templates}/correosexternos/HTML.template"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<bean id="correosExternosTEXT" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:${mail.ruta.templates}/correosexternos/TEXT.template"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<!-- -->

	<bean id="docsFirmaHTML" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:${mail.ruta.templates}/documentosfirma/HTML.template"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<bean id="docsFirmaTEXT" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:${mail.ruta.templates}/documentosfirma/TEXT.template"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<!-- -->

	<bean id="docsAnteFirmaHTML" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:${mail.ruta.templates}/documentoantefirma/HTML.template"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<bean id="docsAnteFirmaTEXT" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:${mail.ruta.templates}/documentoantefirma/TEXT.template"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<!-- -->

	<bean id="docsMarcadosFirmaHTML" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:${mail.ruta.templates}/documentosmardadofirma/HTML.template"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<bean id="docsMarcadosFirmaTEXT" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:${mail.ruta.templates}/documentosmardadofirma/TEXT.template"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<!-- -->

	<bean id="borradorHTML" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:${mail.ruta.templates}/minutario/borrador/HTML.template"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<bean id="borradorTEXT" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:${mail.ruta.templates}/minutario/borrador/TEXT.template"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<!-- -->

	<bean id="minutarioHTML" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:${mail.ruta.templates}/minutario/HTML.template"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<bean id="minutarioTEXT" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:${mail.ruta.templates}/minutario/TEXT.template"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<!-- -->

	<bean id="respuestasHTML" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:${mail.ruta.templates}/respuestas/HTML.template"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<bean id="respuestasTEXT" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:${mail.ruta.templates}/respuestas/TEXT.template"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<!-- -->

	<bean id="turnosHTML" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:${mail.ruta.templates}/turnos/HTML.template"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<bean id="turnosTEXT" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:${mail.ruta.templates}/turnos/TEXT.template"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<!-- -->

	<bean id="templateVolante" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:templates/volante.xml" type="java.io.InputStream" />
			</bean>
		</constructor-arg>
		<constructor-arg>
			<bean class="java.nio.charset.Charset" factory-method="forName">
				<constructor-arg value="UTF-8"
					type="java.lang.String" />
			</bean>
		</constructor-arg>
	</bean>

	<!-- -->

	<bean id="templateAcuseAsunto" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:templates/acuse_envio_tramite.xml"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
		<constructor-arg>
			<bean class="java.nio.charset.Charset" factory-method="forName">
				<constructor-arg value="UTF-8"
					type="java.lang.String" />
			</bean>
		</constructor-arg>
	</bean>

	<!-- -->

	<bean id="templateAcuseRespuesta" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:templates/acuse_envio_respuesta.xml"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
		<constructor-arg>
			<bean class="java.nio.charset.Charset" factory-method="forName">
				<constructor-arg value="UTF-8"
					type="java.lang.String" />
			</bean>
		</constructor-arg>
	</bean>

	<!-- -->

	<bean id="docsRecAnteFirmaHTML" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:${mail.ruta.templates}/documentorechazoantefirma/HTML.template"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<bean id="docsRecAnteFirmaTEXT" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:${mail.ruta.templates}/documentorechazoantefirma/TEXT.template"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<!-- -->

	<bean id="firmaFailHTML" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:${mail.ruta.templates}/firmaFail/HTML.template"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<bean id="firmaFailTEXT" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:${mail.ruta.templates}/firmaFail/TEXT.template"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<!-- -->

	<bean id="docsParaAnteFirmaHTML" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:${mail.ruta.templates}/documentoparaantefirma/HTML.template"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<bean id="docsParaAnteFirmaTEXT" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:${mail.ruta.templates}/documentoparaantefirma/TEXT.template"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<!-- -->

	<bean id="docsCanceladoHTML" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:${mail.ruta.templates}/documentocancelado/HTML.template"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<bean id="docsCanceladoTEXT" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:${mail.ruta.templates}/documentocancelado/TEXT.template"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<!-- -->

	<bean id="emptyBodyHTML" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:${mail.ruta.templates}/emptyBody/HTML.template"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<bean id="emptyBodyTEXT" class="java.lang.String">
		<constructor-arg>
			<bean class="org.springframework.util.FileCopyUtils"
				factory-method="copyToByteArray">
				<constructor-arg
					value="classpath:${mail.ruta.templates}/emptyBody/TEXT.template"
					type="java.io.InputStream" />
			</bean>
		</constructor-arg>
	</bean>

	<!-- -->

</beans>