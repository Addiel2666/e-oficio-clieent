##
hibernate.dataSourceName=java:comp/env/jdbc/ecmSigapVDB
hibernate.default_schema=SIGAP_2
hibernate.db_type=ORACLE

## Hibernate Config Params
hibernate.show_sql=true
hibernate.format_sql=true

## Ejecucion Fucction obtiene_path_area_v4
##obtenerIdAreasHijos Oracle
obtenerIdAreasHijos = SELECT obtiene_path_area_v4(:idArea) FROM DUAL
##obtenerIdAreasHijos postgresql
obtenerIdAreasHijos_PG = SELECT obtiene_path_area_v4(:idArea);

## Ejecucion Fuction recuperar_desbloquear_folio
## Oracle
recuperarFolio = SELECT recuperar_desbloquear_folio(:idArea,:folio) FROM DUAL
## Postgresql
recuperarFolio_PG = SELECT recuperar_desbloquear_folio(:idarea,:folio);

## Convierte las cadenas de texto a mayusculas automaticamente al guardar un registro.
auto_uppercase=false

# Seguridad Config
seguridad.cas.url=http://DEV-ECM-APP:9085/cas2/v1/tickets

# Servicio de Conversion de Archivos a PDF
conversor.url=http://DEV-ECM-APP:9085/converter-core

# Servicio de web sockets
websocket.url=ws://DEV-ECM-APP:9085/web-socket/notification

#nombre del archivo de licencia
ecm.licencia.name=ECMLicense.lic

# Validar limite de usuarios
validate.limit.user=false

#Caracteres invalidos para nombre de Aerea
# nuevo agregar al final= +|\\Caracter
#ejemplo +|\\*
invalid.caracter.nameArea=/+|\\:+|\\*+|\\?+|\\'+|\\<+|\\>+|\\|

## indicar si las pruebas periodicas se tienen q ejecutar
## ON / OFF
pruebassinteticas.cronjob=OFF
## fracuencia de ejecucion de las pruebas.
pruebassinteticas.cronjobTime=0 0 0,4,8,12,16,20 * * MON-FRI
## query para obtener las sessiones del repositorio,
pruebassinteticas.dqlSessiones=execute show_sessions
## usuarios q no se toman en cuenta para contar sessiones activas,
pruebassinteticas.usersExclude=dmadmin,dm_bof_registry

##login
usuario.session.unica=false

## validar licencia
licValidator=true
licValidatorCron=0 0 0 * * ?

#Hace check de folio del area
check.folio.area=true